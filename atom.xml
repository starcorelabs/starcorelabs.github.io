<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Starcore Labs</title>
  <subtitle>UX Developer Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://starcorelabs.com/"/>
  <updated>2017-04-12T17:37:36.442Z</updated>
  <id>http://starcorelabs.com/</id>
  
  <author>
    <name>Michael Douglas</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Time Management</title>
    <link href="http://starcorelabs.com/2017/04/11/time-management/"/>
    <id>http://starcorelabs.com/2017/04/11/time-management/</id>
    <published>2017-04-11T05:00:00.000Z</published>
    <updated>2017-04-12T17:37:36.442Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/Patek Phillippe 1563 Split Second Chronograph.jpg" alt="Patek Phillippe 1563 Split Second Chronograph"><br><sub><sub>Patek Phillippe 1563 Split Second Chronograph</sub></sub></p>
<blockquote>
<p>People have two problems in life. Knowing what they want and knowing how to get it.</p>
</blockquote>
<p>Some mistakenly think of time managment as as single skill. Which explains why so many are bad at managing it. It is a set of interelated skills. When used together consistently, help manage time more effectively.</p>
<p>Skills of Time Managment:</p>
<ol>
<li>Focus</li>
<li>Goal Setting</li>
<li>Planning</li>
<li>Prioritizing Tasks</li>
<li>Monitoring time usage</li>
<li>Follow Through</li>
</ol>
<h3 id="Focus"><a href="#Focus" class="headerlink" title="Focus"></a>Focus</h3><p>Focus is the ability to pay attention in the moment to the things and/or activities that you are doing. Focus requires ignoring distractions (Friends, TV, Facebook, Games, etc). Stay on task and accomplishing one thing at a time. Humans are biologically wired to focus on one task at a time. (unless diagnosed with ADHD. That condition requires medication for this reason)</p>
<p>To manage time better the myth of “Mulit-Tasking” must be put to rest. Try this quick exercise to demonstrate how mulit-tasking actually wastes time. At the top of a standard sheet of paper write, first and last name. Underneath it, write out numbers counting each letter in first and last names.</p>
<p><img src="/img/mulit-tasking-test.png" alt="Mulit-Tasking Test"></p>
<p>This as a template. Use a timer, there are many available for smart phones. The exercise is to time how long it takes writing words and numbers. This is not a race. Write at a normal rate. Stop the timer and save the value next to it. This is the control case of doing one task at a time.</p>
<p>Now for the mulit-task case. Start the timer and write one letter and then switch to writing a number below it. Alternate between writing letters and numbers until you finish. Stop the timer and record the results. You’ll notice is it much slower. This because we learn at an early age to focus on writing one word at a time. Switching between letters and numbers changes channels in the brain. This causes confusion by dividing focus. Anything that divides focus causes stress, frustration, wasted time, and effort. Mulit-Tasking is the worst myth perpetuated on mondern socieity by corporations. Do not do it.</p>
<p>Companies that pay hourly are especially prone to this line of thinking. They squeeze employees to get as much work out of them per hour as possible. Chasing the clock only increases stress and burnout.  </p>
<h3 id="Goal-Setting"><a href="#Goal-Setting" class="headerlink" title="Goal Setting"></a>Goal Setting</h3><p>A goal is simply a statement of a desired result. Start with the end in mind. What does it look like?<br>Create a clear picture of the outcome required. Write it down.</p>
<p>When working in a group it is essential that all team members commuicate the end result of a task as clearly as possible. Any confusion or vague discriptions waste time. Team members must go back and forth asking questions to clarify the task before it can be completed.</p>
<p>Understand how to break large projects down into smaller bit-sized chucks that be can accomplished in 30 minutes or less. Average human attention span is 30 to 40 minutes. Frequent shrot breaks help reset the brain and maximize effecitive productivity. Insitituions that do not commuicate, manage time, or plan well will cause employees to divide their attention. Again, divided attention wastes time, causes mistakes, stress, frustration, and burnout.</p>
<h3 id="Planning"><a href="#Planning" class="headerlink" title="Planning"></a>Planning</h3><blockquote>
<p>Those who fail to plan, are planning to fail.</p>
</blockquote>
<p>Planning is the skill of using a Calendar to schedule tasks with deadlines over days, weeks, and months. As stated before, some tasks will be too large to accomplish in one 30 minute work block, or even one day. Instead create a project with a clearly defined outcome. Break down the larger vision into smaller tasks. Schedule these tasks logically so they build on each other over time. Space tasks out to give room for unforseen errors, delays, and necessary breaks. People are not machines.</p>
<p>While planning, remember to schedule time for reviewing the plan weekly and making updates as things change.</p>
<h3 id="Prioritizing-Tasks"><a href="#Prioritizing-Tasks" class="headerlink" title="Prioritizing Tasks"></a>Prioritizing Tasks</h3><p>During planning consider which tasks will have the most impact and/or can be completed quickly. Prioritze those task by moving them to the top of the list or scheduling them first. Doing this ensures they get completed first. This maximizes efficent use of time as more complex task will require more time to complete.</p>
<h3 id="Monitoring-time-usage"><a href="#Monitoring-time-usage" class="headerlink" title="Monitoring time usage"></a>Monitoring time usage</h3><p>This is the most difficult aspect of time managment. Once the goals have been set and tasks scheduled it is time to work each task in the list. While working on each task it is importiant to stay aware time useage. Either adjusting working speed or revising estimates of how long each task will take to complete.</p>
<p>Take notes after each task to denote its completion and its duration.  Consistent monitoring and note taking develops a better sense of time estimation and task managment.</p>
<h3 id="Follow-Through"><a href="#Follow-Through" class="headerlink" title="Follow Through"></a>Follow Through</h3><p>Get to work as soon as possible. Without follow through, nothing gets done.</p>
<p>Don’t get stuck in “Analysis paralysis” or “Planning-itus”. Wasting time on deciding what tasks to be done and/or planning things out perfectly is counter-productive. No plan or task can be perfect. Instead aim for simple clear communication and understanding the desired outcome.</p>
<p>The point of time management is to get things done. Don’t waste time adding more busy work.<br>When working solo many of these steps can be combined, condensed, and streamlined.</p>
<p>When working in a group it is recommended to clearly define the terms, process, and proceedures for time managment before work begins.<br>Making sure to emphasize clear simple communiation between members. Nothing kills productivity faster than two or more people using the same words while assigning different meanings.</p>
<p>This a general system that can be adapted to suit most people.</p>
<p>For a more advanced system please read “<a href="Getting Things Done: The Art of Stress-Free Productivity">Getting Things Done by David Allen</a>“</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/Patek Phillippe 1563 Split Second Chronograph.jpg&quot; alt=&quot;Patek Phillippe 1563 Split Second Chronograph&quot;&gt;&lt;br&gt;&lt;sub&gt;&lt;sub&gt;Patek
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Corporate Logic</title>
    <link href="http://starcorelabs.com/2017/04/06/corporate-logic/"/>
    <id>http://starcorelabs.com/2017/04/06/corporate-logic/</id>
    <published>2017-04-06T05:00:00.000Z</published>
    <updated>2017-04-10T15:50:03.113Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/meeting.jpg" alt="meeting"></p>
<p>Corporations are notorious for being hierarchical, authoritarian, and rigid with policies and procedures. Due to the legal requirements of doing business some of these measures are necessary.</p>
<p>The majority of the rules in corporations make no logical sense, ends up creating more work, and hinder productivity. They do things this way mainly for power and control over their employees.</p>
<p>Some companies have used a <a href="https://www.inc.com/magazine/20110401/jason-fried-why-i-run-a-flat-company.html" target="_blank" rel="external">flat hierarchy</a> instead of the traditional top-down model. The evidence from these enterprises shows it improves speed, reduces stress, increases productivity, and profit. Why aren’t more corporations doing things this way? They are: <a href="https://www.inc.com/magazine/20110401/jason-fried-why-i-run-a-flat-company.html" target="_blank" rel="external">Flat is the new up</a>.</p>
<p>Corporate logic is not based on actual logic. It is based on ego and whim. Disguised as “Business Needs”, which is code for “The person at the top said we have to do things this way”. It is the old Golden Rule, “He who has the gold, makes the rules”.</p>
<p>To contrast corporate logic against actual logic here’s an example. Imagine you need to go to the store to stock up on a few items: </p>
<ul>
<li>Eggs</li>
<li>Bread</li>
<li>Hamburger</li>
<li>Water</li>
<li>Strawberries</li>
<li>Burritos</li>
<li>Ham</li>
<li>Cheese</li>
</ul>
<p>The normal process is to check your kitchen to see what you are out of, or low on. You write the list out and check to see if you can afford everything. After work or during the weekend you go to the store and buy these items. Then you come home and put everything away.</p>
<p>If you have a large family you might have to increase the quantity of what to buy. Or, some members may ask for specific items, but the overall process is the same.</p>
<p>If we asked a typical Corporation to perform this same task, here’s how they would handle it.</p>
<hr>
<p>Here’s the corporate power structure for Illogic Inc:</p>
<ul>
<li>Boss - Bill</li>
<li>Executives - Sandy, Kate</li>
<li>Managers - Debbie, Andy</li>
<li>Workers - Tom, John, Randy, Rick, Jill, Mary</li>
</ul>
<hr>
<p>The Boss starts the process by sending an email to his Executives.<br>Here’s a two-week calendar showing the sequence of events.</p>
<p><img src="/img/two-weeks.png" alt="meeting"></p>
<p>Here’s the email from the Boss:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">To: Sandy, Kate</div><div class="line">From: Bill</div><div class="line">Subject: List</div><div class="line">Content:</div><div class="line">Hey,</div><div class="line">I think we are getting low on some things.</div><div class="line">Please work with the team to figure out what we need and restock supplies.</div><div class="line">Thanks, Bill</div></pre></td></tr></table></figure></p>
<p>Neither of the Executives know what needs to be on the list. Due to the corporate law of “Keeping up Appearances” they cannot directly ask what was on the last list. Due to fear of looking like they don’t already know.</p>
<p>In the corporate world, any lack of knowledge or skill is seen as a weakness. Being Executives they must at all times maintain the impression they know what is going on. If they don’t know something, it is the same as saying they cannot do their job. This might cause them to lose authority over those under them. Or if the boss gets the impression they cannot do their job, he might replace or fire them.</p>
<p><em>(Note: This is corporate logic and not true. Humans are flawed and make mistakes. No one can know everything or be good at everything. Yet, this is how a lot of Corporations operate.)</em></p>
<p>They decide to meet with the managers to find out if the managers know what should be on the list. But they cannot ask directly. Instead they decide to delegate the task to them so they don’t have to deal with it.</p>
<p>Here’s how the meeting goes:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">Meeting: Tuesday 11:00 AM</div><div class="line">Executives: Sandy, Kate</div><div class="line">Managers: Debbie, Andy</div><div class="line">Summary: Sandy runs the meeting by asking Debbie and Andy how they are doing. If other projects are on track.</div><div class="line"></div><div class="line">Andy says everything is running smoothly.</div><div class="line"></div><div class="line">Kate says Bill has requested they check the resources list and restock any items that are low or missing.</div><div class="line"></div><div class="line">Debbie responds by asking if this is the standard list?</div><div class="line">(hoping they will tell her what&apos;s on the list because she has no clue).</div><div class="line"></div><div class="line">Sandy says Bill asked that the whole team looks into this.</div><div class="line"></div><div class="line">Andy asks what&apos;s the time frame?</div><div class="line"></div><div class="line">Kate says ideally they would like to have it completed by next Friday the 13th.</div><div class="line"></div><div class="line">Debbie and Andy look at each other both wonder if the other has any idea what is going on.</div><div class="line"></div><div class="line">The meeting ends and Sandy says they will talk again next week.</div></pre></td></tr></table></figure>
<p>The managers stay in the meeting room for a few minutes asking each other if they’ve seen this stock list before?<br>After a few minutes they realized neither of them has seen it or knows what needs to be on this list. They decide to delegate the task to the workers under them.</p>
<p>They setup a meeting with the workers on Wednesday the 4th to assign them with the task of figuring out what items need to be restocked and in what quantity.</p>
<p>The meeting goes pretty much like the last one. Except one of the workers, Rick, asks “Can we see the last list to get an idea of what should be on the new list?”</p>
<p>The managers maintain their appearance of calm authority but inside they are panicking.</p>
<p>Andy says, “That’s a good question Rick. The last list is non-relevent as business needs have changed. So the team will need to research and determine what needs to be on the new list. The deadline is next Friday the 13th at 2:00pm.”</p>
<p>The meeting ends with all of the workers confused and frustrated. They have no idea what needs to be on the list or where to start looking. All the questions they asked were answered with a similar corporate non-answer.</p>
<p>The workers spend the rest of Wednesday and all of Thursday scouring the corporate network and internal resources looking for clues as to what needs to be on the list. A few quiet arguments between workers break out. Resulting in lost time, addtional frustration, and strained working relations.</p>
<p>Friday comes and the Managers have a review meeting to assess what the workers have found.<br>Jill hands the Managers a printed list and tells them it was a team effort:</p>
<ul>
<li>Milk</li>
<li>Eggs</li>
<li>Bread</li>
<li>Water</li>
<li>Strawberries</li>
<li>Ham</li>
<li>Cheese</li>
</ul>
<p>The Managers ask if they have verfied and validated the items on the list.<br>Randy says they looked through old purchase receipts to piece together the list.</p>
<p>The team talks about their research efforts for about 10 minutes. The Managers say they will run the list up the chain to see if it gets approved.</p>
<p>The meeting ends and the Managers feel better. But the workers are emotionally exausted and frustrated.<br>Looming over their heads is the possiblity the list won’t get approved. Which means they will have to keep working on this frustrating and poorly defined task.</p>
<p>Monday morning the 9th at 8:00 AM the Boss sends the Executives this email:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">To: Sandy, Kate</div><div class="line">From: Bill</div><div class="line">Subject: List Update</div><div class="line">Content:</div><div class="line">Hey,</div><div class="line">Please add Bacon to the list.</div><div class="line">We don&apos;t need much but I&apos;d like to have it for breakfast in the morning.</div><div class="line">Thanks,</div><div class="line">Bill</div></pre></td></tr></table></figure></p>
<p>The Executives acknowledge the email and schedule another meeting on Tuesday the 10th at 11:00 AM with the Managers.</p>
<p>They could have added to the list themselves but they are busy with other projects. (Mostly they are talking with each other and checking Facebook)</p>
<p>In the next meeting the Executives tell the Managers that everything is going well but the boss is requesting the addition of Bacon to the list.</p>
<p>The Managers check the budget for this project and say they cannot afford to add Bacon unless they remove something from the list.</p>
<p>The Executives remind the Managers the deadline for this project is on Friday the 13th. They encourage the Managers to have their team work the problem. The Managers are frustrated but are ulimately forced to comply with this last minute change.</p>
<p>They setup another meeting with their team on Wednesday at 10:00 AM. They tell the workers the Boss has requested that they add Bacon to the list. However, the budget and deadline have not changed. So they have until Friday the 13th at 2:00 PM to find a way add Bacon.</p>
<p>The Managers suggest replacing something on the list with Bacon.</p>
<p>The meeting ends with the workers feeling angry and stressed from the time-pressure because the project changed at the last minute.</p>
<p>The workers are swamped with other projects for the rest of Wednesday. They set aside Thursday to focus on finishing the list project.</p>
<p>Mostly they spend the day arguing amongst themselves as to which item should be replaced with Bacon. Tom asks if they can use Turkey Bacon instead of regular Bacon? Everyone gets upset with Tom because that’s one more option they do not have time to consider.</p>
<p>At the end of the day on Thursday they finally agree to replace Ham with Bacon because they are both pork products and about the same price. Mostly, everyone on the team is tired of this project and wants to get back to the other projects they were working on before this one was dropped on them.</p>
<p>Friday comes and everyone is in a better mood. The Boss takes the day off because he can. The Executives take a long two hour lunch and waste time talking about non-work related things. Nothing really gets done on Friday.</p>
<p>Most of the workers are eager to know if the list will be accepted.</p>
<p>At 2:00pm the Managers and workers assemble for a final review meeting. The Managers start the meeting by asking everyone how they are doing and if they have any fun weekend plans? The workers all say they are fine and plan to spend their weekend resting. Then the managers look over the list. The workers explain the process they went through to replace ham with Bacon.</p>
<p>The Manager tell the workers they did a good job and they are pleased with the results. Mostly the Managers are distracted by Facebook and other social media during the meeting.</p>
<p>The meeting ends and the workers feel a bit of relief mixed with frustration as the list project has put them behind on other projects.</p>
<p>At 3:00 PM the Managers meet with the Executives and explain how they worked together to motivate the team to produce the list. The Executives are pleased and tell the Managers they might recieve a bonus for this project. All that is left is to send it to the Boss for final approval.</p>
<p>The Mangers and Executives spend the next 20 minutes joking and talking about their plans for the weekend.</p>
<p>Sandy emails the final list to Bill.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">To: Bill</div><div class="line">From: Sandy</div><div class="line">Subject: Final List</div><div class="line">Content:</div><div class="line">Bill,</div><div class="line">After two weeks of hardwork we have put together a list we think you&apos;ll be happy with.</div><div class="line">Once you approve it we will send it to the purchasing department to get the items brought in.</div><div class="line"></div><div class="line">Here&apos;s the list:</div><div class="line">* Milk</div><div class="line">* Eggs</div><div class="line">* Bread</div><div class="line">* Hamburger</div><div class="line">* Water</div><div class="line">* Strawberries</div><div class="line">* Burritos</div><div class="line">* Bacon</div><div class="line">* Cheese</div><div class="line"></div><div class="line">Hope you have a great weekend,</div><div class="line">Sandy</div></pre></td></tr></table></figure>
<p>Bill gets the email on his phone and replies:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">To: Sandy</div><div class="line">From: Bill</div><div class="line">Subject: Re: Final List</div><div class="line">Content:</div><div class="line">Sandy,</div><div class="line">I had completely forgotten about this project.</div><div class="line">The list looks good. I approve.</div><div class="line"></div><div class="line">Have a good weekend,</div><div class="line">Bill</div></pre></td></tr></table></figure>
<p>Corporations are run by whim and ego within the confines of a top-down authoritarian hierarchy.<br>This is how time wasting and frustration inducing projects get created in the first place.</p>
<p>The project meant very little to the Boss. He completely forgot about it. It was the Executives and Managers who assumed it was importiant. Hoping if they did a good job the Boss would reward them with a Bonus. Causing the workers stress, frustration, and conflict.</p>
<p>You could replace this list with any number of projects: Magazine cover layout, Database, Or Website. The process here at Illogic Inc would still be the same.</p>
<p>Culture in any organization is created by its structure and the people who work their.</p>
<p>In this situation the Boss could have saved everyone time and pain. All he had to do was clearly define what he wanted and whom he wanted to do it. Something like list of items, that includes Bacon by the end of the day from Sandy. That would have forced her to do actual work.</p>
<p>Next time you find yourself in a crazy project that doesn’t make sense. Ask who started the project and why? Try to talk directly to that person and find out what exactly they want.</p>
<p>If you accomplish this feat of clearing up communication. You’ll be surprised to find that usually the creator of the project doesn’t know what the end result should look like. If you can pin them down and sort it out, you’ll save yourself time and the company tons of money.</p>
<p>However, if you do this by going over someone with a higher rank than you. They might take offense and look for ways to get you fired or take credit for your work.</p>
<p>This is how corporate logic works.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/meeting.jpg&quot; alt=&quot;meeting&quot;&gt;&lt;/p&gt;
&lt;p&gt;Corporations are notorious for being hierarchical, authoritarian, and rigid with polici
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>The Slow Death of Front-End Development</title>
    <link href="http://starcorelabs.com/2017/02/07/slow-death-of-front-end-development/"/>
    <id>http://starcorelabs.com/2017/02/07/slow-death-of-front-end-development/</id>
    <published>2017-02-07T05:00:00.000Z</published>
    <updated>2017-02-08T13:59:06.881Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/death.jpg" alt="entrepreneur"></p>
<p>Front-End Development is dying a slow death.</p>
<p>The online metrics for career viability of <a href="http://starcorelabs.com/2016/11/02/front-end-development/">front-end</a> might suggest otherwise but hear me out. For the last five years corporations have been redefining the role of front-end developers.</p>
<p>They are mixing graphic design and some back-end programming into their expectations. Changing the academic defintion of what UX and UI developers actually do. Because, their business needs have changed. They have the gold, so they make the rules.</p>
<p>Front-end developers are forced to merge skills from other areas of web development. Doing more work for the same amount of money.</p>
<p>On top of this, in the last three years office workers are mocking up pages and websites using office tools like PowerPoint. (PowerPoint is not a web development tool)</p>
<p>Corporations are treating the art and science of front-end developement like another business skill all workers should know. This level ubiquity devalues the skills of front-end developers. If everyone can do it (even badly) why hire a dedicated UX/UI developer?</p>
<p>In an effort to reduce costs corporations are training their office workers on tools that allow them to create pages without writing code.</p>
<p><a href="https://www.invisionapp.com/" target="_blank" rel="external">InVision</a> is a great tool for creating mockups or web page using a visual interface.</p>
<p><a href="https://www.justinmind.com/" target="_blank" rel="external">JustInMind</a> is another tool created for UX/UI that is being appropriated by office workers. Its drag-and-drop interface gives users a quick and simple way to create beautiful mockups and full pages.</p>
<p>These trends and tools represent the beginning of the end for front-end. As these tools improve and other applications like them are created, there will be less demand for front-end developers.</p>
<p>I’m guessing within the next five years corporations will require all office workers to absorb the skills of front-end developers. Eventually the role of UX/UI will disappear. Replaced by some hideous hybrid title that requires more skills at a lower salary.</p>
<p>In the ancient days of the internet there use to be a position called “Web Master”. Sadly that job was absorbed into what we call back-end today.</p>
<p>Unfortunately corporations drive the demand for developers. When they no longer need dedicated UX/UI the title and skill set will disappear.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/death.jpg&quot; alt=&quot;entrepreneur&quot;&gt;&lt;/p&gt;
&lt;p&gt;Front-End Development is dying a slow death.&lt;/p&gt;
&lt;p&gt;The online metrics for career vi
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Atom Editor</title>
    <link href="http://starcorelabs.com/2017/02/06/atom-editor/"/>
    <id>http://starcorelabs.com/2017/02/06/atom-editor/</id>
    <published>2017-02-06T05:00:00.000Z</published>
    <updated>2017-02-08T13:59:06.881Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/atom-logo.png" alt="entrepreneur"></p>
<p>Many developers prefer a full IDE like Visual Studio for building web applications. With intellisense it gives you suggestions and adds code for you.</p>
<p>Large IDE’s like Visual Studio can be resource hogs. Also, they act like a blackbox.  They make changes and add extra code behind the scenes before outputting to the browser. This can cause serious issues for front-end developers.</p>
<p>Which is why most front-end developers prefer editors that give them full control over their code. For a long time the “cool developers” were using Sublime Text. Which is a great code editor. However, it is not free or opensource. Many developers are using it commercially without paying for it. I’m guessing at some point the company behind Sublime Text will remove the free version.</p>
<p>My favorite code editor is <a href="https://atom.io/" target="_blank" rel="external">Atom</a>. It does everything Sublime can do, and more. I like it because it is free, open source, light weight, and fully customizable. It was created and released by Github on February 26, 2014. It works on macOS, Linux, and Windows. There are tons of plugins, known as <a href="https://atom.io/packages" target="_blank" rel="external">packages</a>, which add extra functionally to Atom.</p>
<p>The <a href="https://flight-manual.atom.io/" target="_blank" rel="external">Flight Manual</a> will teach you how to use and customize your copy of Atom.</p>
<p>Or, you can watch this great <a href="https://www.youtube.com/watch?v=EyG20hhON6E" target="_blank" rel="external">Atom Tutorial</a> on YouTube.</p>
<p>I recommend all UX/UI front-end developers give Atom a try.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/atom-logo.png&quot; alt=&quot;entrepreneur&quot;&gt;&lt;/p&gt;
&lt;p&gt;Many developers prefer a full IDE like Visual Studio for building web applicatio
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Continuous Development</title>
    <link href="http://starcorelabs.com/2017/02/05/continuous-development/"/>
    <id>http://starcorelabs.com/2017/02/05/continuous-development/</id>
    <published>2017-02-05T05:00:00.000Z</published>
    <updated>2017-02-08T13:59:06.881Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/whiteboard.jpg" alt="entrepreneur"></p>
<p>Building web applications as an individual developer is hard. Trying to do it with a team of developers. Organizing who does what and when. Sharing code among all team members without parts being broken or over-written. Figuring out how to make changes requested by the business and deliver the full release on time is a monumental task.</p>
<p>Agile /SCRUM has ruled the software development landscape for last decade. Just because it is popular doesn’t mean it is the best method available.</p>
<p>At the time of its creation Agile solved many flaws within the previous “Waterfall” method of development.  At the same time it introduced many flaws of its own. Because of this, many developers loath Agile / SCRUM and all of its time wasting quirks.</p>
<p>I did some Google searching for Anti-Agile and found three interesting articles.</p>
<p>Erik Meijer wrote a scathing article explaining why <a href="http://www.theregister.co.uk/2015/01/08/erik_meijer_agile_is_a_cancer_we_have_to_eliminate_from_the_industry/" target="_blank" rel="external">Agile must be destroyed</a>.</p>
<p>Allen Holub wrote, “<a href="http://www.drdobbs.com/architecture-and-design/the-anti-anti-agile-manifesto/240168963" target="_blank" rel="external">The Anit Anti Agile Manifesto</a>“.  He attempts to defend Agile. Pointing out it is how Corporations have chosen to implment it that cause problems. Not the Agile methodology itself.</p>
<p>Michael O. Church wrote a very powerful article about “<a href="https://michaelochurch.wordpress.com/2015/06/06/why-agile-and-especially-scrum-are-terrible/" target="_blank" rel="external">Why Agile and Scrum are terrible</a>“.</p>
<p>This is a much more indepth post that illustrates in detail how Agile is being abused in the wild. He ends with a positive alternative methodology called “Continuous Development” that solves the majority of these issues.</p>
<p>Andrew Binstock Wrote a great overview of “<a href="http://www.drdobbs.com/architecture-and-design/continuous-development-the-new-maintenan/240167052" target="_blank" rel="external">Continuous Development</a>“ which highlights the purpose and benefits of this alternative method for all forms of development but specifically for the emerging “Internet of Things”.</p>
<p>Personally, I dislike Agile because it is a business-driven model of develpment. Non-technical business people who do not know how to write code or the time it takes to develop working software are making decisions and setting deadlines. In my opition, that’s like allowing a 6 year old to plan your vacation and drive the car. An all around bad idea.</p>
<p>If “business needs” must drive software development, at least include the developers in the decision making process.</p>
<p>In the last 10 years the IT industry has evolved by leaps and bounds, in spite of the limiting factors of Agile. I feel its time we upgrade our development methodology to refect a 21st Century mindset. If not Continuous Development then at least something better than Agile.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/whiteboard.jpg&quot; alt=&quot;entrepreneur&quot;&gt;&lt;/p&gt;
&lt;p&gt;Building web applications as an individual developer is hard. Trying to do it w
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Do You Write Code?</title>
    <link href="http://starcorelabs.com/2016/12/22/do-you-write-code/"/>
    <id>http://starcorelabs.com/2016/12/22/do-you-write-code/</id>
    <published>2016-12-22T05:00:00.000Z</published>
    <updated>2017-02-07T14:43:17.032Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/business-executives.jpg" alt="business-executives"></p>
<h2 id="Dear-Business-Executives"><a href="#Dear-Business-Executives" class="headerlink" title="Dear Business Executives,"></a>Dear Business Executives,</h2><p>While working in different corporate environments I’ve noticed a lot of you are tasked with adding content to web projects. Usually you go about this by using office tools to mock up web pages and send them to the development department to build.</p>
<p>This is a slow frustrating process for you and the developers. So with your executive power why not push for a content management system that would make your lives easier?</p>
<p>Take a moment to answer this quick question, “Does this code make sense to you?”</p>
<p><a href="https://jsfiddle.net/starcorelabs/Lpo1xanu/3/" target="_blank" rel="external">JSFiddle</a></p>
<script async src="//jsfiddle.net/starcorelabs/Lpo1xanu/3/embed/html,css,result/dark/"></script>


<p>If not, then you should <strong>not</strong> be asked to mock up web pages. Mocking up web pages is the Graphic Designer’s / UX Developer’s job. Why would you do their job for free? That is bad ROI (Return On Investment).</p>
<p>Office tools like Microsoft Word, PowerPoint, and Excel are not web development tools. Whatever you make with these tools cannot be perfectly recreated on a web page. Because not all web browsers are created equal. Browsers have more limitations than office tools.</p>
<p>Your focus is on content creation: writing text, adding photos, tables of data, and other media that needs to be on the page. Using a <a href="http://www.wpbeginner.com/glossary/content-management-system-cms/" target="_blank" rel="external">CMS</a>, like <a href="https://wordpress.org/" target="_blank" rel="external">Wordpress</a> allows you to quickly create page content using a built-in document editor that automatically converts your content to work correctly within web pages. You’d be surprised how many <a href="http://www.wpbeginner.com/showcase/40-most-notable-big-name-brands-that-are-using-wordpress/" target="_blank" rel="external">top companies are using Wordpress</a>.</p>
<p>Using a CMS allows you to collaborate with other executives to create, review, and publish content without waiting on the designers or developers to build the page for you. The power to create and edit content is in your hands.</p>
<p>UX/UI Developers create layouts and templates for the CMS with the correct look and feel to match the web application.</p>
<p><img src="/img/layouts.png" alt="site-layouts"></p>
<p>They do this using web development tools like <a href="http://www.adobe.com/products/photoshop.html" target="_blank" rel="external">Photoshop</a>, <a href="https://www.visualstudio.com/" target="_blank" rel="external">Visual Studio</a>, <a href="https://atom.io/" target="_blank" rel="external">Atom</a> and web standard HTML, CSS, and JavaScript code. Once the templates are added to the CMS anyone authorized to create content can apply those custom templates to a page.</p>
<p>Separating content creation from template design, in this way, allows each team to do what they do best while saving time and money.</p>
<p>How much time will you save when you can add content yourself?</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/business-executives.jpg&quot; alt=&quot;business-executives&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Dear-Business-Executives&quot;&gt;&lt;a href=&quot;#Dear-Business-Executiv
    
    </summary>
    
    
      <category term="business" scheme="http://starcorelabs.com/tags/business/"/>
    
  </entry>
  
  <entry>
    <title>The Beauty of Sass</title>
    <link href="http://starcorelabs.com/2016/12/18/the-beauty-of-sass/"/>
    <id>http://starcorelabs.com/2016/12/18/the-beauty-of-sass/</id>
    <published>2016-12-18T05:00:00.000Z</published>
    <updated>2017-02-07T14:43:17.032Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/sass.jpg" alt="sass"></p>
<p><a href="http://sass-lang.com/" target="_blank" rel="external">SASS</a> stands for Syntactically Awesome Stylesheets. It is a preprocessor for CSS. Which are <a href="http://www.css3-tutorial.net/" target="_blank" rel="external">Cascading Style Sheets</a>.  </p>
<p>CSS is a simple language that allows designers and developers to control the layout and “style” of webpages. CSS itself is simple and the basics can be learned quickly.</p>
<p>The problem with CSS is that it is simple. Every element on a page: font-size, background color, and image position, needs its own set of styles. Some styles can be reused if written correctly. Even with expert skill, CSS written for large projects can quickly become a mess. This is because CSS lacks any kind of programming logic: varibles or functions. It was designed purely to position elements on webpages.</p>
<p>Here’s an example of CSS:</p>
<script async src="//jsfiddle.net/starcorelabs/0wkb8x88/5/embed/html,css,result/dark/"></script>

<p>As you can see it takes a lot of CSS to define the box, colors, fonts, and placement of elements. Imagine having to do this for every element in a web application.</p>
<p>SASS was created to give developers a better way to write reusable CSS using varibles, mixins, nesting, and other programming logic available to developers. There are other preprocessors like <a href="http://lesscss.org/" target="_blank" rel="external">LESS</a> and <a href="http://stylus-lang.com/" target="_blank" rel="external">Stylus</a>. They each have their pros and cons. After carefully reviewing all of them I chose SASS. Most companies have chosen SASS as well. You’ll have to experiment to decide which one works best for you.</p>
<p>Developers write their styles in SASS and then use a complier to transform them into CSS the browser understands. Using either Ruby-Sass or Node-Sass. Personally I prefer <a href="https://www.npmjs.com/package/node-sass" target="_blank" rel="external">Node-Sass</a>.</p>
<p>To confuse you a little more there are two kind of SASS. There is the standard style.sass and the CSS compliant style.scss.</p>
<p>Here’s a great SitePoint article that explains <a href="https://www.sitepoint.com/whats-difference-sass-scss/" target="_blank" rel="external">the differences between SASS and SCSS</a>. Personally I prefer the SCSS version because it is closer to CSS which I’m already familiar with.</p>
<p>You might be wondering, “How long will it take to learn SASS?”</p>
<p>Well if you already know CSS then not long. For reference I taught myself CSS in 3 weeks and then learned SASS (the SCSS version) in one week.<br>Of course I was putting in an hour of study and practice a day. You will learn faster if you put in more time and effort.</p>
<p>You can speed up your learning by watching these free YouTube courses.</p>
<ul>
<li><a href="https://www.youtube.com/playlist?list=PL41lfR-6DnOq3BebucTNMSVDojCIiv_en" target="_blank" rel="external">HTML5 &amp; CSS3 by Quentin Watt</a></li>
</ul>
<p>I learned SASS from this awesome video series.</p>
<ul>
<li><a href="https://www.youtube.com/playlist?list=PLUoqTnNH-2XxOt7UsKlTqbfrA2ucGosCR" target="_blank" rel="external">Sass Tutorials by LevelUp Tuts</a></li>
</ul>
<p>Here’s another great SASS tutorial.</p>
<ul>
<li><a href="https://www.youtube.com/playlist?list=PLUoqTnNH-2XxOt7UsKlTqbfrA2ucGosCR" target="_blank" rel="external">Learn Sass by Brad Hussey</a></li>
</ul>
<p>Once you have the basics of CSS and SASS down you can check out my previous post on refactoring and organizing your SASS codebase.<br><a href="http://starcorelabs.com/2016/12/12/how-do-you-refactor-css/">How Do You Refactor CSS?</a></p>
<p>Using a preprocessor for medium to large websites and web applications is a must. Trying to do it with vanilla CSS is a nightmare, I’ve done it.<br>Whatever your skill level or project. Invest the time to learn SASS. You’ll thank yourself later.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/sass.jpg&quot; alt=&quot;sass&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://sass-lang.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SASS&lt;/a&gt; stands for Syntactica
    
    </summary>
    
    
      <category term="Development" scheme="http://starcorelabs.com/tags/Development/"/>
    
  </entry>
  
  <entry>
    <title>Wordpress Development</title>
    <link href="http://starcorelabs.com/2016/12/13/wordpress-development/"/>
    <id>http://starcorelabs.com/2016/12/13/wordpress-development/</id>
    <published>2016-12-13T05:00:00.000Z</published>
    <updated>2017-02-07T14:43:17.032Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/wordpress.png" alt="wordpress"></p>
<p>I’ve been building Wordpress websites for the last few years. It is a great platform for building small to large websites. Many large well-known websites are powered by Wordpress.</p>
<p>It is ideal for non-technical people who simply need a platform for content creation. Most end-users need a text editor to write posts and pages. Wordpress fits this requirement the best.</p>
<p><a href="http://www.wpbeginner.com/" target="_blank" rel="external">WP Beginnger</a> provides all the resources users and developers need to get up and running fast.</p>
<p>Do you need a special feature for your website? Wordpres lets you extend its functionality with Plugins:<br><a href="https://wordpress.org/plugins/photo-gallery/" target="_blank" rel="external">Photo Gallery</a></p>
<p>I suggest people start with WP Beginner because the articles are focused toward people who have no prior experience with Wordpress.</p>
<p>Of course there are tons of websites and YouTube videos to learn from.</p>
<p><a href="https://www.youtube.com/playlist?list=PLC5E59DD6D84D34DC" target="_blank" rel="external">Wordpress Basics</a> - Is a great YouTube video course from Level Up Tuts. I highly recommend it if you are a visual learner.</p>
<p>The great part about Wordpress is that the learning curve is small.</p>
<p>If you simply want to experiment with the software you can <a href="http://www.wpbeginner.com/wp-tutorials/how-to-install-wordpress-on-your-windows-computer-using-wamp/" target="_blank" rel="external">Install Wordpress on your Windows Computer using WAMP</a>.</p>
<p>The key to learning Wordpress is to not get overwhelmed. Pick one tutorial and stick with it until the end. Do a few more hands-on tutorials until you’ve built a half dozen small projects. By then you’ll have a good understanding for how to use Wordpress.</p>
<p>If you want to get into the development side of things check out the <a href="https://codex.wordpress.org/" target="_blank" rel="external">Wordpress Codex</a>.</p>
<p>This is a great reference for both using Wordpress and getting started with Wordpress development.</p>
<p>There are also forums, reddit threads, Facebook groups, and Meetups for Wordpress that might help you learn more.</p>
<p>Remember learning Wordpress is a process that takes time.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/wordpress.png&quot; alt=&quot;wordpress&quot;&gt;&lt;/p&gt;
&lt;p&gt;I’ve been building Wordpress websites for the last few years. It is a great platfor
    
    </summary>
    
    
      <category term="Development" scheme="http://starcorelabs.com/tags/Development/"/>
    
  </entry>
  
  <entry>
    <title>How Do You Refactor CSS?</title>
    <link href="http://starcorelabs.com/2016/12/12/how-do-you-refactor-css/"/>
    <id>http://starcorelabs.com/2016/12/12/how-do-you-refactor-css/</id>
    <published>2016-12-12T05:00:00.000Z</published>
    <updated>2017-04-05T15:27:04.537Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/laptop-code.jpg" alt="laptop code"></p>
<blockquote>
<p>Always code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live.</p>
</blockquote>
<p>Most of the corporate environments I’ve worked in are years behind the latest trends in front-end development. Not using or allowing any kind of preprocessors, no build process, and no package management. All these combined to cause technical debt, a bloated codebase, frustrated developers, and especially wasted time and money.</p>
<p>Thankfully the company I currently work for is on the cutting edge of web development. It is so great when a company gets it!</p>
<p>We use Node.js / Gulp.js for automation and SASS for styling. Which gives us the speed and flexibility to build websites and write CSS that is more modular and maintainable.</p>
<p>Of course even the most enlightened company will have some dark legacy code lurking somewhere on their servers.</p>
<p>While it is perfectly functional code. Overtime it has become an overgrown tangled garden.  This makes it harder to track down errors and add new features.</p>
<p>Attempting to refactor a codebase this large would require a rewrite and reorganization of the code. It would take too long, cost too much, and some elements would break due to their reliance on other legacy code that, for business reasons, cannot be changed.</p>
<p>Even if the code was copied to a development server and worked on as a seperate branch in the repository it would still cost time and money to fix.</p>
<p>Plus, there is the looming question of how do you organize something as gargantuan as a 7 year old interconnected SCSS codebase?</p>
<p>My company has recently began creating a style guide which addresses some of these issues. It informs UX Developers how to organize and write better code going forward.</p>
<p>This is a step in the right direction. However, my sentiment is, “Writing good code that relies on bad code, is still bad code”.</p>
<p>In preperation for what I see as an inevitable refactoring / rewrite of this SCSS codebase I spent time researching online to improve my understanding of the current best practices.</p>
<p>I watched two great YouTube videos.</p>
<ol>
<li><a href="https://www.youtube.com/watch?v=kbGYPm9nYfk" target="_blank" rel="external">Refactoring CSS Without Losing Your Mind by Harry Roberts.</a></li>
<li><a href="https://www.youtube.com/watch?v=IkFq2cSbQ4Q" target="_blank" rel="external">Organizing CSS with OOCSS, SMACSS, and BEM by Matt Stauffer.</a></li>
</ol>
<p>Both videos highly recommended <a href="https://smacss.com/" target="_blank" rel="external">smacss.com.</a></p>
<p>After watching these videos I looked up the speakers online and found their respective websites. They are excellent resources for web developers.</p>
<ul>
<li>Harry Roberts - <a href="http://csswizardry.com/2016/08/refactoring-css-the-three-i-s/" target="_blank" rel="external">The Three I’s of Refactoring CSS</a></li>
<li>Matt Stauffer - <a href="https://mattstauffer.co/blog/organizing-css-oocss-smacss-and-bem" target="_blank" rel="external">Organizing CSS: OOCSS, SMACSS, and BEM</a></li>
</ul>
<p>Later I found this awesome <a href="http://timhartmann.net/frontend-development/scss-styleguide-with-bem-oocss-smacss/" target="_blank" rel="external">SCSS Style Guide by Tim Hartmann.</a></p>
<p>These resources come together to create an elegant map for refactoring existing code and creating new object-oriented CSS that is scalable, modular, and named according to the BEM standard. (Block, Element, Modifier.)</p>
<p>I learned from Harry that refactoring is something that should be an ongoing process within the overall development environment. Not a specific dedicated undertaking that costs too much time and money and takes the focus away from developing new features and/or fixing bugs.</p>
<p>This is part of  “Technical Debt” in development. Something he talks more about in the YouTube video.</p>
<p>From the resources above I put together a folder structure that would help any organization with a large codebase plan out a long term refactoring process.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">scss/</div><div class="line">|- _base/</div><div class="line">|  |- _config.scss</div><div class="line">|  |- _presets.scss</div><div class="line">|  |- _header.scss</div><div class="line">|  |- _nav.scss</div><div class="line">|  |- _article.scss</div><div class="line">|  |- _section.scss</div><div class="line">|  |- _sidebar.scss</div><div class="line">|  |- _footer.scss</div><div class="line"></div><div class="line">|- _layouts/</div><div class="line">|  |- _l-base.scss</div><div class="line">|  |- _l-grid.scss</div><div class="line"></div><div class="line">|- _modules/</div><div class="line">|  |- _m-buttons.scss</div><div class="line">|  |- _m-tabs.scss</div><div class="line"></div><div class="line">|- _states/</div><div class="line">|  |- _s-buttons.scss</div><div class="line">|  |- _s-tabs.scss</div><div class="line">|- _shame.scss</div><div class="line">|- application.scss</div><div class="line"></div><div class="line">stylesheets/</div><div class="line">|- application.css</div></pre></td></tr></table></figure>
<p>You’ll notice that I added a shame file per the suggestion of Matt Stauffer. I’ve included it as a partial. This way if there is a deadline and something has to be fixed quickly. The hacky code goes into the shame file. Which doubles as a to-do list. Later when there is more time developers can go back and refactor it.</p>
<p>On top of these great resources I found uncss that further reduces the codebase.</p>
<p>Since we use Bootstrap 3 in the web application there is a lot of CSS that is not being used and bloats the code.</p>
<p>Chris Ruppel wrote an excellent post <a href="https://www.fourkitchens.com/blog/article/use-gulp-and-uncss-slim-down-your-css-framework" target="_blank" rel="external">Use Gulp and UnCSS to slim down your CSS framework.</a></p>
<p>I used gulp-uncss on a bootstrap-based personal project to remove unused CSS. It cut my CSS down 75%.</p>
<p>A few things surprised me about Uncss. It only took a couple of minutes to setup the gulp task and run it. The process is non-destructive. It maps the “in-use” css code and then writes it to a new output.css file. It makes no changes to the exisiting css. It processed my small codebase faster than I expected. With this approach I doubt it would take long to process a large SCSS codebase.</p>
<p>These are the current best practices. I plan on staying updated on the topics of refactoring and writing organized, scalable, modular CSS.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/laptop-code.jpg&quot; alt=&quot;laptop code&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Always code as if the guy who ends up maintaining your code will b
    
    </summary>
    
    
      <category term="Development" scheme="http://starcorelabs.com/tags/Development/"/>
    
  </entry>
  
  <entry>
    <title>Upgrade to Hexo</title>
    <link href="http://starcorelabs.com/2016/12/08/upgrade-to-hexo/"/>
    <id>http://starcorelabs.com/2016/12/08/upgrade-to-hexo/</id>
    <published>2016-12-08T05:00:00.000Z</published>
    <updated>2017-02-07T14:43:17.032Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/hexo.png" alt="hexo"></p>
<p>I have hosted and developed many websites using Wordpress in the past. I like how Wordpress dynamically adds the header, sidebar, footer, and content to each page. Preventing me from repeating myself. Unforunately it requires an expensive Apache, PHP, and MySQL server to run. I cannot justify the expense of paying for hosting. Especially for something like a blog.</p>
<p>For the last few years I’ve been hosting my site on Github Pages and writing static HTML &amp; CSS files by hand, which is a major pain. It makes it difficult to focus on writing posts. I usually go through a few revisions when writing. Wrapping my text in code makes it much harder to edit and revise what I’ve written.</p>
<p>So I started looking around for alternatives to Wordpress. A year ago I became interested in <a href="https://www.staticgen.com/" target="_blank" rel="external">static site generators</a>. I spent a long time testing many different packages.</p>
<p>First, I tried <a href="https://jekyllrb.com/" target="_blank" rel="external">Jekyll</a>. I like the way it works conceptually but I dislike its overly-engineered backend. I spent way too much time configuring it instead of actually using it.</p>
<p>Next I tried <a href="https://ghost.org/" target="_blank" rel="external">Ghost</a>. It is promoted as a good alternative to Wordpress. I found it easy to setup and use but too limited for my needs. It is not completely static either and requires a node.js server to run.</p>
<p>Finally after trying a few other options I decided to use <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a> to power my blog. So far it works great. It gives me the dynamically included components I want. Along with the freedom to write my posts in <a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet" target="_blank" rel="external">markdown</a> which makes adding new posts simple.</p>
<p>For a long time I struggled with deciding between expensive but easy to use dynamic Wordpress websites or free but labor intensive hand-coded static sites.</p>
<p>Now I have the best of both worlds with Hexo.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/hexo.png&quot; alt=&quot;hexo&quot;&gt;&lt;/p&gt;
&lt;p&gt;I have hosted and developed many websites using Wordpress in the past. I like how Wordpress d
    
    </summary>
    
    
      <category term="Development" scheme="http://starcorelabs.com/tags/Development/"/>
    
  </entry>
  
  <entry>
    <title>Becoming an Entrepreneur</title>
    <link href="http://starcorelabs.com/2016/11/25/becoming-an-entrepreneur/"/>
    <id>http://starcorelabs.com/2016/11/25/becoming-an-entrepreneur/</id>
    <published>2016-11-25T05:00:00.000Z</published>
    <updated>2017-02-07T14:43:17.016Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/entrepreneur-at-computer.jpg" alt="entrepreneur"></p>
<p>I have spent the last few years studying Entrepreneurship. It has been an eye-opening experience. There are tons of free resources online that have shown me step-by-step many different ways to be an Entrepreneur.</p>
<p>Like this article from Entrepreneur.com: <a href="https://www.entrepreneur.com/article/207488" target="_blank" rel="external">So You Want to Be Your Own Boss</a></p>
<p>I have read some really amazing books like:  <a href="https://www.amazon.com/Will-Test-Business-Waste-Money/dp/0997082305/ref=sr_1_1?ie=UTF8&amp;qid=1480129186&amp;sr=8-1&amp;keywords=Pat+Flynn" target="_blank" rel="external">Will It Fly? by Pat Flynn</a></p>
<p>I’ve watched YouTube videos like: <a href="https://www.youtube.com/watch?v=nJxQ2kUGJkA" target="_blank" rel="external">Simon Sinek’s Top 10 Rules For Success</a></p>
<p>These and many other resources have inspired me to make some drastic changes in my perception, habits, lifestyle, and goals. When I study something as in-depth as becoming an Entrepreneur I take lots of notes. Then I work from my notes.</p>
<p>While I consider myself a student I feel I have enough understanding to build my own online business. Based on what I’ve learned my business is going to be much different than I had originally envisioned. Which is a positive thing!</p>
<p>From everything I’ve learned so far I know there are no shortcuts, quick-fixes, or easy ways out. There is a mountain of work ahead of me. Still, it seems like something I will enjoy doing while I’m still working full time.</p>
<p>As I work toward my goal of running a successful online business I will continue to take notes. Once I reach my idea of success I’ll be able to transform my notes into a book that other people can follow like a map to lost treasure.</p>
<p>Keep following this blog for more updates on my progress.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/entrepreneur-at-computer.jpg&quot; alt=&quot;entrepreneur&quot;&gt;&lt;/p&gt;
&lt;p&gt;I have spent the last few years studying Entrepreneurship. It has
    
    </summary>
    
    
      <category term="business" scheme="http://starcorelabs.com/tags/business/"/>
    
  </entry>
  
  <entry>
    <title>Why I quit posting on Facebook</title>
    <link href="http://starcorelabs.com/2016/11/24/why-i-quit-posting-on-facebook/"/>
    <id>http://starcorelabs.com/2016/11/24/why-i-quit-posting-on-facebook/</id>
    <published>2016-11-24T05:00:00.000Z</published>
    <updated>2017-02-07T14:43:17.032Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/facebook.png" alt="facebook"></p>
<p>Facebook is the gossip grapevine of the Internet. It makes money from ads and from selling user information to marketers. Everything I post and like.</p>
<p>The stated purpose of Facebook is to connect with Family and Friends. In my experience of using the website I’ve found its mostly a time wasting process of reading other people’s posts. Most people treat their profile like a soapbox to complain about their problems or push their political and/or religious beliefs.</p>
<p>While companies use their pages to sell products and services. Facebook is slowly becoming a dead mall.</p>
<p>The few friends I have on Facebook are too busy broadcasting to their audience to stop and have a meaningful conversation with me. Some friends have over 200+ friends. When I’ve asked how they keep up with that many people they reply with, “I don’t. I only interact with a handful of people. They are only on my friends lis in case either of us needs to contact the other.”</p>
<p>Armed with this information and my growing distaste for the way the website actually operates I decided it was time to take action.</p>
<p>Over the month of October 2016 I emptied my account. I removed all my personal information and photos. I went through the tedious process of deleting every post and like I’ve added over the years. I disconnect every application and left every group. Now my profile is a shell.</p>
<p>I set my privacy settings so no one can post on my profile or tag me in a photo. I don’t want any posts on my profile.</p>
<p>You might wonder why I went through all this trouble? If I dislike Facebook so much why don’t I just delete my account? Well there are two reasons.</p>
<ol>
<li><p>I do use Facebook to chat with two people who I cannot otherwise contact easily.</p>
</li>
<li><p>A few years ago I deleted my Facebook account and I was much happier. However, some websites I follow put exclusive content on Facebook. Deleting my account would make it impossible to view that content.</p>
</li>
</ol>
<p>Let me make it clear I don’t hate Facebook. What I don’t like is that it doesn’t help me stay in contact with friends. Studies have proven people who use Facebook daily are more unhappy than those who use it less or not at all. It is an anti-social network that drives people apart. I’d rather have a few close friends I see in person on a regular basis than 300+ associates online I barely know or talk to. I don’t need the attention of strangers to feel good about myself.</p>
<p>Plus I am not giving my information for free so Facebook can turn around and make money from it.</p>
<p>If they had a YouTube profit sharing model, where people who’s posts got high views earned a percentage in return. I would reconsider posting.</p>
<p>Until then my Facebook page will remain an empty shell.</p>
<p>Instead I’ll stick with post my thoughts here.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/facebook.png&quot; alt=&quot;facebook&quot;&gt;&lt;/p&gt;
&lt;p&gt;Facebook is the gossip grapevine of the Internet. It makes money from ads and from se
    
    </summary>
    
    
      <category term="Web" scheme="http://starcorelabs.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>UX Developer</title>
    <link href="http://starcorelabs.com/2016/11/09/ux-developer/"/>
    <id>http://starcorelabs.com/2016/11/09/ux-developer/</id>
    <published>2016-11-09T05:00:00.000Z</published>
    <updated>2017-02-07T14:43:17.032Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/ux-developer.jpg" alt="ux developer"></p>
<p>I recently got a new UX Developer job. I work for a great company here in Indianapolis. I cannot tell you how grateful I am to have landed this job. Or how much I enjoy what I do. Its awesome!</p>
<p>I like the people I work with because they are smart, mature, professional, and focused. They don’t waste time with small talk. They are too busy enjoying getting things done.</p>
<p>I get to use my favorite editor <a href="https://atom.io/" target="_blank" rel="external">Atom</a>. I enjoy writing <a href="http://sass-lang.com/" target="_blank" rel="external">SCSS</a> code and using <a href="http://gulpjs.com/" target="_blank" rel="external">gulp.js</a> for compiling and automating other tasks. Of course I’m still using <a href="http://getbootstrap.com/" target="_blank" rel="external">Bootstrap</a>. I am looking forward to the updated version 4 when it releases.</p>
<p>I’m also getting deeper into <a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a>. It has so much power. In my off hours I’ve been learning <a href="http://es6-features.org/#Constants" target="_blank" rel="external">ES6</a> and tinkering with <a href="https://www.typescriptlang.org/" target="_blank" rel="external">TypeScript</a>.</p>
<p>We use <a href="https://trello.com/" target="_blank" rel="external">Trello</a> to track projects as well as some internal software. The other tools I use are non-development related or restricted so I cannot talk about them.<br>Nor am I allowed to talk about the projects I work on.</p>
<p>Instead let me tell you about some other amazing tools that I use.</p>
<p>If you are a developer on Mac or Linux you probably use the terminal all day without thinking about. Developers who have to use Windows the “command prompt” is lacking in looks and funcationally. I found this awesome free software called <a href="http://cmder.net/" target="_blank" rel="external">Cmder</a>. It gives you a terminal complete with Linux style commands. It is insanely awesome.</p>
<p>I love <a href="https://git-scm.com/" target="_blank" rel="external">Git</a> and <a href="https://github.com/" target="_blank" rel="external">GitHub</a> but I’m a visual person so runnig git commands sometimes lacks the visual references I crave. <a href="https://www.gitkraken.com/" target="_blank" rel="external">GitKraken</a> provides the functionally and slick eye candy that terminal commands lack. I love looking at this software.</p>
<p>Of course I use <a href="http://www.adobe.com/products/photoshop.html" target="_blank" rel="external">Photoshop</a> and <a href="http://www.adobe.com/products/illustrator.html" target="_blank" rel="external">Illustrator</a> for graphics. <a href="https://www.gimp.org/downloads/" target="_blank" rel="external">Gimp</a> and <a href="https://inkscape.org/en/" target="_blank" rel="external">InkScape</a> are not as powerful as the professional tools but they are good free alternatives.</p>
<p>I love this <a href="https://www.iconico.com/colorpic/" target="_blank" rel="external">ColorPic</a> utility. It gives me the HEX and RGB values for whatever I hover my mouse over.</p>
<p>For screenshots I use <a href="https://lightscreen.com.ar/" target="_blank" rel="external">LightScreen</a>. Its a free simple tool that uses very little resources.</p>
<p>My most important tool is <a href="https://www.google.com/chrome/browser/desktop/" target="_blank" rel="external">Google Chrome</a> and its built-in Developer Tools. They are the best!</p>
<p>That’s pretty much everything I use on a daily basis.<br>If you have any questions feel free to message me on Twitter.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/ux-developer.jpg&quot; alt=&quot;ux developer&quot;&gt;&lt;/p&gt;
&lt;p&gt;I recently got a new UX Developer job. I work for a great company here in Ind
    
    </summary>
    
    
      <category term="Development" scheme="http://starcorelabs.com/tags/Development/"/>
    
  </entry>
  
  <entry>
    <title>Corporate Confusion</title>
    <link href="http://starcorelabs.com/2016/11/03/corporate-confusion/"/>
    <id>http://starcorelabs.com/2016/11/03/corporate-confusion/</id>
    <published>2016-11-03T05:00:00.000Z</published>
    <updated>2017-02-07T14:43:17.016Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/corporate.png" alt="corporate"></p>
<p>Is your company having trouble finding and keeping talented developers?<br>This article explains how you might be unintentionally insulting them.</p>
<h3 id="Surprise-You’re-a-Software-Company"><a href="#Surprise-You’re-a-Software-Company" class="headerlink" title="Surprise You’re a Software Company"></a>Surprise You’re a Software Company</h3><p>If you are in business today with a website where you sell products and/or services, you are a software company. It is the central hub upon which the rest of your business revolves.</p>
<p>The confusion most business have these days is they try to apply “Old School” thinking to 21st century business. These old school companies are leaving money on the table and repelling the talent they need.</p>
<p>They think that technology is a tool they use as an add-on to their core business. Which is completely backwards to how their customers and partners view them.</p>
<h3 id="Flip-Your-Focus"><a href="#Flip-Your-Focus" class="headerlink" title="Flip Your Focus"></a>Flip Your Focus</h3><p>In this modern world of business your website is your company. It is the platform which serves your customers needs, and sells your products and/or services. Everything else is secondary.</p>
<p>So the talent that builds and maintains a company’s online identity and customer portal should be given respect. Yet most non-technical executives think “All code is equal” and treat developers like replaceable fast-food or retail employees. This insults the very talent they are seeking, without realizing it.</p>
<p>These same non-technical executives like to use buzz words to describe talented developers as, “Masters, Ninjas, or Rock Stars”.</p>
<h3 id="Talent-is-Valuable"><a href="#Talent-is-Valuable" class="headerlink" title="Talent is Valuable"></a>Talent is Valuable</h3><p>So, let’s look at this situation using the analogy of a rock band. For a band of musicians to play music and become successful each member must master their instrument, understand how to play with their specific band mates, and understand the in’s and out’s of the music business.</p>
<p>Anyone who’s watched documentaries about how music works behind the scenes knows that even the beginning musicians have a basic understanding of what they are worth.<br>Compare this situation with how a team of developers, like a band of musicians, must work together to create web applications to serve their companies customers.</p>
<p>Each member must know their specialized skill set, how to work within project requirements, interact with other team members, and be mindful of the larger scope of their industry and the business side of software development. Any developer with at least a year of experience knows what they are worth.</p>
<h3 id="Transparent-Insult"><a href="#Transparent-Insult" class="headerlink" title="Transparent Insult"></a>Transparent Insult</h3><p>Companies have adopted a shady practice called “Low-balling” which, as the name suggests, means to expect high value skills for a low salary. Developers pick up on this practice quickly. Its insulting and repels them from even applying.</p>
<p>Take a moment and go on any job search site: Monster, Dice, CareerBuilder, or Indeed.<br>Search for “Front-End Development”. You’ll see low-balling in 9 out of every 10 job postings.</p>
<p>Companies are trying to save money by cramming two or more highly skilled jobs under a title that has a lower average salary. Who are they trying to fool?</p>
<h3 id="Rock-Band-Job-Post"><a href="#Rock-Band-Job-Post" class="headerlink" title="Rock Band Job Post"></a>Rock Band Job Post</h3><p>Let’s compare our team of developers to the members of a rock band.</p>
<ul>
<li>Graphic Designer would be the Singer / Song Writer</li>
<li>UX/UI would be the Guitar Players</li>
<li>Back-End Developer would be the Bass Player</li>
<li>Database would be the Drummer</li>
</ul>
<p>How absurd would it sound if a company posted a job offer like this:</p>
<blockquote>
<p>“Guitar player wanted for contract or contract-to-hire role. Needs a positive “Can-Do” attitude. Must be a team player. Will be expected to play guitar, bass, drums, and write songs. Must be familiar with all the latest trendy songs and styles. Expect long hours, indecision from leaders, and last minute song changes that you cannot possibly adapt to. Salary will be for Guitar playing only.”</p>
</blockquote>
<p>This is how a developer sees these “Low-Ball” job offers. Which is why companies who engage in this shady low-balling practice cannot find talent to fill the role. They have started from the wrong premise to begin with.</p>
<p>Whomever is influencing non-technical executives to assume developers are smart enough to build websites and software but not business smart (or street smart) enough to know when they are being lied too and taken advantage of, is seriously not in touch with reality.</p>
<h3 id="Unicorn-Dreams"><a href="#Unicorn-Dreams" class="headerlink" title="Unicorn Dreams"></a>Unicorn Dreams</h3><p>These non-technical executives have watched too many unrealistic Hollywood movies about hackers and rock star developers. They are looking for a “Full Stack” developer who can do everything on time and under budget for one low salary.</p>
<p>They wrongly assume there exists a group of developers in their area who are talented enough to build websites and software but lack any creativity or business skills to come up with their own ideas. And, they are willing to work for less than they are worth doing twice the amount of work.</p>
<p>The reality is Bill Gates, Steve Jobs, and Mark Zuckerberg are extremely rare “Full Stack” developers. People with that level of talent are snatched up by large companies in Silicon Valley that will pay them $150k to $200K a year because those companies understand how valuable that level of talent is.</p>
<p>They also provide these developers with the benefits and flexibility they want which keeps them happy and so they stay with the company longer.</p>
<p>Midwest companies are insane to think they will find “Silicon Valley” level Full-Stack Developer who would accept a salary of $50k or less a year. It will never happen.</p>
<h3 id="Recruiter-Reactions"><a href="#Recruiter-Reactions" class="headerlink" title="Recruiter Reactions"></a>Recruiter Reactions</h3><p>Most recruiters are non-technical. They take whatever listing a company sends them and try to fill it like a order from a menu. They spend 60 seconds keyword scanning resumes and comparing it to the job posting. When they see 50% or more matching keywords or acronyms they send out email blasts saying, “This looks like a great fit for you.” Hoping that one of the 50 candidates they reach will get hired and earn them a bonus.</p>
<p>However, without a deeper understanding of technology or the context of how the developer applied it, the poor recruiter is left spinning their wheels in the dark.<br>They find it hard, if not impossible, to fill roles that are unreasonable to begin with.</p>
<h3 id="Honesty-is-the-Answer"><a href="#Honesty-is-the-Answer" class="headerlink" title="Honesty is the Answer"></a>Honesty is the Answer</h3><p>Corporate companies view honesty like vampires view sunlight. A burning fiery death. Not knowing something is the beginning of wisdom. Not an admittance of weakness. Accepting you don’t know something is the first step to finding out what actually works.</p>
<p>The pain and frustration companies and recruiters feel when trying to fill developer roles comes from their lack of understanding. Being honest about being non-technical is not the same thing as being honest about not understanding the technology or how it actually works.</p>
<p>The good news is they don’t have to become developers or learn how to write complicate code to understand the broad strokes of how it all works.<br>Understanding that “All Code is Not Equal” and that low-balling is insulting to developers will help companies rewrite their job postings to attract the talent they need.</p>
<p>The key is to be honest about the skills you are looking for. If you need someone who can do everything then post the job as a “Full Stack Developer”. Full Stack Developers are extremely rare. So, your company might have to break the position into separate Front-End and Back-End Developer roles.</p>
<p>If the role is being offered within the current salary range. With intangible benefits that some developers want more than money. Those companies who “Get It” will attract and retain talent longer, which with their help, will earn them higher profits.</p>
<p>It is a matter of deciding if your company wants a short term bonus versus a long term profit growth.</p>
<p>Keep in mind that talented developers will see through low-ball charades and won’t apply for unrealistic job offers.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/corporate.png&quot; alt=&quot;corporate&quot;&gt;&lt;/p&gt;
&lt;p&gt;Is your company having trouble finding and keeping talented developers?&lt;br&gt;This art
    
    </summary>
    
    
      <category term="business" scheme="http://starcorelabs.com/tags/business/"/>
    
  </entry>
  
  <entry>
    <title>Front End Development</title>
    <link href="http://starcorelabs.com/2016/11/02/front-end-development/"/>
    <id>http://starcorelabs.com/2016/11/02/front-end-development/</id>
    <published>2016-11-02T05:00:00.000Z</published>
    <updated>2017-02-07T14:43:17.032Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/dev-spectrum.png" alt="developer spectrum"></p>
<p>Front-End Developers write HTML, CSS, and JavaScript. The languages browsers speak, to display what users see and interact within the browser.</p>
<p>Development, like all highly skilled disciplines, exists on a spectrum. The field of software development is too vast for any single person to know everything. It costs a lot of time, effort, and money to learn these skills.</p>
<p>As the old saying goes, “The jack of all trades is the master of none.” This is why developers specialize on a single area of focus within the overall spectrum of development. HTML, CSS, and JavaScript are the only languages that web browsers understand natively. We use browsers everyday to check our Facebook profile, watch YouTube videos, and search for things on Google. (Google Chrome is my favorite browser)</p>
<p><img src="/img/browsers.jpg" alt="browsers"></p>
<p>Web browsers are a class of application that runs on your device (Desktop, Laptop, Tablet, Smartphone) and displays web pages. When you are using your browser, in the blink of an eye, it will request a web page from a web server, download and combine the collection of HTML, CSS, JavaScript files along with any relevant images and render them as a full page for you to view and interact with.</p>
<p><img src="/img/files-combine-website.png" alt="files combine website"></p>
<p>These files are actually text files with the ending extensions renamed.</p>
<p><img src="/img/text-to-html.png" alt="text to html"></p>
<p>So all the complexity of the web you use everyday is created by these three limited languages. Each one has a specific purpose that works in concert with the other two to bring web pages to life.</p>
<p><img src="/img/html-css-javascript.png" alt="html css javascript"></p>
<p>For non-technical people we can consider the analogy of a house. HTML would be the floor, walls, ceiling, and roof of the house. CSS would be the layout of the rooms, the color of the carpet and walls, the placement of the windows and doors. JavaScript would be the electrical, heat and AC, and the water running into and out of the house. All of these elements are needed to make a functional modern web page.</p>
<p><img src="/img/blueprints.jpg" alt="blueprints"></p>
<h3 id="Back-End-Development"><a href="#Back-End-Development" class="headerlink" title="Back-End Development"></a>Back-End Development</h3><p>Back-End Development is also known as “Application Development”. It is different from Front-End Development because the languages used cannot be understood or displayed by web browsers. These languages either run exclusively on the server to process data or are used to generate and deliver HTML, CSS, and JavaScript that the browser can understand. Back-End languages include: ASP, C#, .Net, PHP, Ruby, Python, and Java. Some of these languages must be compiled by special expensive tools like Visual Studio before they can be run on the server.</p>
<p>In large web applications like Facebook or Amazon, data is stored in a database. Think of a database like a secure vault that holds lots of linked together spreadsheets. This is where all the secure information, like user information, or Facebook posts, is held.</p>
<p>Back-End Developers link the front-end code using application languages like PHP to databases like MySQL, SQL, and Oracle. Some Back-End Developers specialize in database design and development.</p>
<p>Back-End Development is even more complex and time consuming to learn than Front-End Development. That’s why Back-End Developers usually earn 50% to 70% more money. There are rare developers who can do both Front-End and Back-End Development. They are called “Full Stack” developers. Like Unicorns they are extremely rare. Usually these people end up in high paying jobs or they start their own business. You will likely never see a true Full-Stack Developer without a job and/or business of their own.</p>
<h3 id="How-long-does-it-take-to-learn-Front-End-Development"><a href="#How-long-does-it-take-to-learn-Front-End-Development" class="headerlink" title="How long does it take to learn Front-End Development?"></a>How long does it take to learn Front-End Development?</h3><p>In the last five years Front-End Development has exploded into a very complex array of tools, frameworks, and libraries all aimed at making it easier to write and organize the HTML, CSS, and JavaScript needed to make fast, interactive, and advanced web applications.</p>
<p>These languages take time to learn. Just like if you tried to learn to read and speak a foreign language. Learning the basics of HTML, CSS, and JavaScript can take a year or longer. Then you have to learn revisioning tools like Git. CSS preprocessors like LESS and SCSS. JavaScript preprocessors like CoffeeScript or TypeScript. Build tools like Grunt, Gulp, and WebPack. Package management tools like Bower. Responsive frameworks like Bootstrap, Foundation, and Skeleton. Single-Page Application frameworks (SPA) like Angular, Ember, and Meteor.</p>
<p>Putting it all together it will take at least four years of study and practice to be functional. That’s the same amount of time as a college degree. Plus, these technologies are a moving target that change daily. While learning these skills you must stay updated on the newest trends and latest advancements just to stay relevant. Otherwise you’ll be left in the dust.</p>
<p>Here’s a short list of some of the popular (at the time of this post) front-end frameworks and tools available.</p>
<ul>
<li><a href="https://bower.io/" target="_blank" rel="external">Bower</a></li>
<li><a href="http://backbonejs.org/" target="_blank" rel="external">Backbone</a></li>
<li><a href="http://getbootstrap.com/&quot;" target="_blank" rel="external">Bootstrap</a></li>
<li><a href="http://coffeescript.org/" target="_blank" rel="external">CoffeeScript</a></li>
<li><a href="https://git-scm.com/" target="_blank" rel="external">Git</a></li>
<li><a href="https://www.typescriptlang.org/" target="_blank" rel="external">TypeScript</a></li>
<li><a href="http://fontawesome.io/" target="_blank" rel="external">Font-Awesome</a></li>
<li><a href="https://webpack.github.io/" target="_blank" rel="external">WebPack</a></li>
<li><a href="http://sass-lang.com/" target="_blank" rel="external">SASS</a></li>
<li><a href="http://gruntjs.com/" target="_blank" rel="external">Grunt</a></li>
<li><a href="https://jquery.com/" target="_blank" rel="external">jQuery</a></li>
<li><a href="http://gulpjs.com/" target="_blank" rel="external">Gulp</a></li>
<li><a href="https://angularjs.org/" target="_blank" rel="external">Angular</a></li>
<li><a href="https://angularjs.org/" target="_blank" rel="external">Angular 2</a></li>
<li><a href="http://ionicframework.com/" target="_blank" rel="external">Ionic</a></li>
<li><a href="http://emberjs.com/" target="_blank" rel="external">Ember</a></li>
<li><a href="https://facebook.github.io/react/" target="_blank" rel="external">React</a></li>
<li><a href="https://www.meteor.com/" target="_blank" rel="external">Meteor</a></li>
</ul>
<p>If you are interested in learning more, search on Google for “Front-End Development Basics”. There are tons of free resources to get you started.</p>
<p>Like I said before, learning Front-End Development is very much like learning to read, write, and speak a foreign language. It will take consistent study and practice to develop professional level skills.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/dev-spectrum.png&quot; alt=&quot;developer spectrum&quot;&gt;&lt;/p&gt;
&lt;p&gt;Front-End Developers write HTML, CSS, and JavaScript. The languages bro
    
    </summary>
    
    
      <category term="Development" scheme="http://starcorelabs.com/tags/Development/"/>
    
  </entry>
  
  <entry>
    <title>How to Build a Website for Beginners</title>
    <link href="http://starcorelabs.com/2016/11/01/how-to-build-a-website-for-beginners/"/>
    <id>http://starcorelabs.com/2016/11/01/how-to-build-a-website-for-beginners/</id>
    <published>2016-11-01T05:00:00.000Z</published>
    <updated>2017-02-07T14:43:17.032Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/website.png" alt="website"></p>
<p>So you’ve decided you want a professional website for your blog, hobby, or business. You’ve looked around on Google to find a web development company or freelancer near you. (You have looked on Google right?).</p>
<p>You’ve hopefully gotten over the sticker shock of how much it costs to build a professional website. (It ranges between $2,000 to $6,000 depending on what you want) I’m sure you’ve compared the prices between different companies and decided which one offers you the best deal based on your business needs. (If not, you should do that now)</p>
<p>Maybe you are like most people and have no idea why its so expensive, how websites work, how they are built, or how to use one to earn you money. Maybe you’re looking to find the cheapest person who can to build you a site quickly. Maybe you think once its up you can take over and do it yourself.</p>
<p>That is the road to ruin my friend. You get what you pay for. In other words, how can you expect them to do something for you that they haven’t done for themselves? Seems reasonable but few people apply that kind of logic when they want a shiny new website.</p>
<p>For those “Do-it-yourself” type people. Don’t assume because you’ve used Facebook and Google that you know how to build a website. That’s like assuming because you drive your car to work, you somehow know how to fix it when it breaks down. Or worse, you think you could build one from scratch.</p>
<p>If you do not already know how to write code or how computers work. Trying to do it yourself will be like trying to put IKEA furnature together in the dark. Of course I am not saying you cannot learn. There are tons of YouTube videos and whole websites where you can learn web development for free. I encourage everyone who has interest and time to learn how to write code. The question is do you want to be a developer or just own and run your own site?</p>
<p>Techincally speaking you do not have to know how to write code to setup and run a functional website for your business. Unless you want a custom design and special features. The learning curve is much less if you are simply writing content and marketing your products and/or services.</p>
<p>If you do want to be a developer it will take you a minimum of 4 years to get the basics down. You’ll need to learn HTML, CSS, Responsive Design, JavaScript, PHP, MySQL and Graphic Design. Along with Marketing, Social Media Marketing, Content Writing, and SEO. Plus, the technologies behind web development are changing everyday. You’ll have to keep up with this sea of ever-changing techology just to stay relevent. Its a constantly moving target.</p>
<p>For those of you who are busy trying to run a business it would be wiser to save your time and hire a professonal, like me, who knows what they are doing. Just be willing to listen to that professional since that’s why you’ve hired them. They have put in the time to learn all this stuff.</p>
<p>Keep in mind having a web site doesn’t mean people will instantly find you online or give you money. Its not like winning the lotto. Making money online is hard and takes time. There is no silver bullet. You have to build your site correctly from the start so people can search for you on Google. This is based on things the are already looking for that match with what you are selling. How do you do that? Its call Search Engine Optimization or SEO. There are whole companies that specialize in just doing SEO for websites. That’s how deep this rabbit hole goes.</p>
<p>Having a website is like owning a puppy. You have to feed it, walk it, and clean up after it. With a website you have to set it up correctly, SEO, Marketing, add some kind of payment system to sell products and/or services so people can buy from your site. Then you have to maintain it with constant content updates. Otherwise it will be a boring static site few people will want to visit. It will cost you money instead of earning you money.</p>
<p>If you just want a free site to post your thoughts I suggest you go to Wordpress.com. You’ll get a limited free blog with a free domain of your choice. However, if you want to make custom changes or use your own domain it will cost you. Still, if you just want to post your thoughts and add some photos its a good way to get familiar with the software. Beware Wordpress.com does not let you sell things through their free account.</p>
<p>To earn money from your website you’ll need to pay for a hosted version of the Wordpress software. Then you will need to sell a service, product, and/or advertisements. The design of your site and your content (written text) are all part of presenting whatever you are selling in a compelling way to entice your viewers to buy from you. There are tons of books, videos, and websites that can teach you how to do all of these things. However, as I pointed out previously it takes years to learn everything you’ll need to know.</p>
<p>In an effort to save you time and money I’ve written a short summary of how to setup a web site for beginners. This is a bare bones broad strokes overview of how to do it. If this doesn’t make sense to you, or you don’t want to take the time to read this and follow along, then you should hire a professonal.</p>
<ol>
<li>Go to GoDaddy.com and pick a domain. Make sure it is focused on the thing you want to be known for or the thing you are selling. Consider thinking from the point of view of someone who’s putting a search in Google. What would you need to type in to find the thing you are selling? This is called Search Engine Optimization. If you start building your website with the idea of making it easy to find on Google, you’ll get more traffic later on.</li>
</ol>
<p>Buy your domain if it is available and make sure to pay the extra $7.00 - $10.00 for privacy. It prevents people from getting your email address and spamming you. We all get enough spam as it is. Plus, people with a bit of knowledge can use your domain to look up your home address. Do you really want them to show up at your house? Trust me, get the privacy. It will prevent headaches in the future.</p>
<ol>
<li><p>You can get hosting separate from your domain from many other companies. Just search on Google for “web hosting”. However for the simplicity of this article I will suggested sticking with GoDaddy.com as well. Having your domain and hosting in the same place, with the same company, will make it really easy to connect the two together. They have excellent customer service and will setup everything for you if you ask them nicely. Just ask them for Wordpress hosting. Which is cheaper than standard hosting. Or, if you’re techinal you can follow their setup guide. Either way it will only take you 10 minutes to get your site up and running.</p>
</li>
<li><p>Sign-in to your site with the user name and password you created. Use a strong password. Make sure to save it some place secure. Pick a free theme within Wordpress. Or buy theme from Themeforest.net. Customize your theme with colors and photos.</p>
</li>
<li><p>Add content. Write up a compelling story about who you are, what you do, and what you’re selling. Write it from the point of view of the people who are going to read it. Speak directly to them and tell them how your product or service will benefit them. Keep it simple.</p>
</li>
<li><p>Add plug-ins. Wordpress has tons of free plug-ins that let you customize your SEO, Google Analytics, Contact Form, while pulling in other website functionality. You can use YouTube for video, SoundCloud and iTunes for music. Amazon for product sales. Mailchimp for email marketing. Plus tons of other Social Media Marketing plug-ins. These help you bring people to your site so they will read your content and buy your products.</p>
</li>
<li><p>SEO - Which means Search Engine Optimization. This is how people find you on Google. Search engines like Google will scan your site on a regular basis and rank it based on how active it is, how recent you updated the content, how relevant your keywords are, and how many people are linking to your site, among other things. Learn more about SEO here: Beginners guide to SEO.</p>
</li>
<li><p>You can learn inbound marketing for free on Hubspot.com This will give you a primer on how to capture people’s attention and drive traffic to your web site.</p>
</li>
</ol>
<p>If you need help with any part of your website setup, custom code, design, or logo. You can contact me at starcorelabs@gmail.com. My rate is $60 an hour and I’ve been building websites since 2006. I have in corporate environments for big companies and now currently run my own freelance development company. Hire me today and let’s build your site the right way!</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/website.png&quot; alt=&quot;website&quot;&gt;&lt;/p&gt;
&lt;p&gt;So you’ve decided you want a professional website for your blog, hobby, or business. Yo
    
    </summary>
    
    
      <category term="Development" scheme="http://starcorelabs.com/tags/Development/"/>
    
  </entry>
  
</feed>
